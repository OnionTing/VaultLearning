# create one vm named 'vaultserver', install Consul and Vault. create another vm named 'hostserver'.
# use vagrant file to set up the vm image 
Vagrant.require_version ">= 1.6.0"

# -*- mode: ruby -*-
# vi: set ft=ruby :

# Networking: private_ip_vault is the IP for Vault server; private_ip_host is the IP for the host server.
private_ip_vault = ENV['PRIVATE_IP_VAULT'] || "192.168.0.100"
private_ip_host = ENV['PRIVATE_IP_HOST'] || "192.168.0.101"

# Base box selection
base_box = ENV['BASE_BOX'] || "bento/ubuntu-16.04"

# Consul variables
consul_install = ["true", "1"].include?((ENV['CONSUL_INSTALL'] || true).to_s.downcase)
consul_host_port = ENV['CONSUL_HOST_PORT'] || 8500
consul_version = ENV['CONSUL_VERSION'] || "1.6.1"
consul_ent_url = ENV['CONSUL_ENT_URL']
consul_group = "consul"
consul_user = "consul"
consul_comment = "Consul"
consul_home = "/srv/consul"

# Vault variables
vault_host_port = ENV['VAULT_HOST_PORT'] || 8200
vault_version = ENV['VAULT_VERSION'] || "1.4.2"
vault_ent_url = ENV['VAULT_ENT_URL']
vault_group = "vault"
vault_user = "vault"
vault_comment = "Vault"
vault_home = "/srv/vault"

Vagrant.configure("2") do |config|

  config.vm.define "vaultserver" do |vaultserver|
     vaultserver.vm.hostname='vault'
     vaultserver.vm.box = base_box
     vaultserver.ssh.insert_key=false

     # Setup networking for vaultserver
     vaultserver.vm.network :private_network, ip: private_ip_vault
     vaultserver.vm.network "private_network", type: "dhcp" 

     # Bootstrap the vaultserver vm 
     vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/shared/scripts/base.sh | bash"

     if (consul_install)
        # Forward Consul port
        vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/shared/scripts/base.sh | bash"

        #Setup Consul user
        vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/shared/scripts/setup-user.sh | bash",
          env: {
            "GROUP" => consul_group,
            "USER" => consul_user,
            "COMMENT" => consul_comment,
            "HOME" => consul_home,
          }

        # Install Consul 
        vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/consul/scripts/install-consul.sh | bash",
          env: {
            "VERSION" => consul_version,
            "URL" => consul_ent_url,
            "USER" => consul_user,
            "GROUP" => consul_group,
          }

          vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/consul/scripts/install-consul-systemd.sh | bash"
      end

      # Forward Vault port
    vaultserver.vm.network :forwarded_port, guest: 8200, host: vault_host_port, auto_correct: true

    # Setup Vault user
    vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/shared/scripts/setup-user.sh | bash",
      env: {
        "GROUP" => vault_group,
        "USER" => vault_user,
        "COMMENT" => vault_comment,
        "HOME" => vault_home,
      }

    # Install Vault
    vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/vault/scripts/install-vault.sh | bash",
      env: {
        "VERSION" => vault_version,
        "URL" => vault_ent_url,
        "USER" => vault_user,
        "GROUP" => vault_group,
      }

    vaultserver.vm.provision "shell", inline: "curl https://raw.githubusercontent.com/hashicorp/guides-configuration/master/vault/scripts/install-vault-systemd.sh | bash"
  end

  config.vm.define "hostserver" do |hostserver|
    hostserver.vm.hostname='host'
    hostserver.vm.box = base_box
    hostserver.ssh.insert_key=false

    # Setup networking for hostserver
    hostserver.vm.network :private_network, ip:private_ip_host
    hostserver.vm.network "private_network", type: "dhcp"

  end

end

